version: '3.6'

services:

  redis:
    container_name: bbacc_redis
    image: "redis:alpine"
    restart: always
    volumes:
      - ${PATH_ROOT}/redis-data:/data
      - ${PATH_ROOT}/log:/var/log
      - ${PATH_ROOT}/common:/common
    command: "redis-server /data/redis.conf"
    user: 1000:1000
    networks:
      default:
        ipv4_address: ${IP_REDIS}
    ports:
      - "${IP_REDIS}:6379:6379"

  api_dev:
    container_name: bbacc_api_dev
    image: node:12-buster
    working_dir: /home/node/app/back
    restart: always
    user: "node"
    networks:
      default:
        ipv4_address: ${IP_API_DEV}
    environment:
      - NODE_ENV=development
      - REFRESH_INTERVAL=10
      - REDIS_URI=redis://redis:6379/1
      - REDIS_DB=1
      - PORT=46954
      - PORTSSL=46955
      - LOGFILE=/var/log/bbacc_api_dev
    volumes:
      - .:/home/node/app
      - ${PATH_ROOT}/log:/var/log
      - ${PATH_ROOT}/common:/common
    command: "yarn start_dev"
    depends_on:
      - redis
      - postgres

  front_dev:
    container_name: bbacc_front_dev
    image: node:12-buster
    restart: unless-stopped
    user: "node"
    working_dir: /home/node/app/
    networks:
      default:
        ipv4_address: ${IP_FRONT}
    environment:
      - PORT=13000
      - HOST=0.0.0.0
      - NODE_ENV=development
    volumes:
      - ./frontend:/home/node/app
      - ${PATH_ROOT}/log:/var/log
      - ${PATH_ROOT}/common:/common
    command: "yarn start"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.bbacc_front_dev.rule=Host(`${DOMAIN_DEV}`)'
      - "traefik.http.routers.bbacc_front_dev.entrypoints=websecure"
      - "traefik.http.routers.bbacc_front_dev.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bbacc_front_dev.service=pcp14"
      - 'traefik.http.routers.bbacc_front_dev.middlewares=gzip@file'
      - "traefik.http.services.bbacc_front_dev.loadbalancer.server.port=13000"
    depends_on:
      - api_dev

  postgres:
    container_name: bbacc_postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD_MAIN}
      PGDATA: /data/postgres
    volumes:
      - ${PATH_ROOT}/postgres-data/:/data/postgres 
      - ${PATH_ROOT}/backup/:/backup
      - ${PATH_ROOT}/common:/common
    # ports:
    #   - "15432:5432"
    networks:
      default:
        ipv4_address: ${IP_POSTGRES}

  pgadmin:
    container_name: bbacc_pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD_MAIN}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ${PATH_ROOT}/backup/pgadmin:/var/lib/pgadmin
      - ${PATH_ROOT}/backup/:/backup
      - ${PATH_ROOT}/common:/common
    networks:
      default:
        ipv4_address: ${IP_PGADMIN}
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.bbacc_pgadmin.rule=HostRegexp(`${DOMAIN_PGADMIN}`)'
      - "traefik.http.routers.bbacc_pgadmin.entrypoints=websecure"
      - "traefik.http.routers.bbacc_pgadmin.tls.certresolver=letsencrypt"
      - 'traefik.http.routers.bbacc_pgadmin.middlewares=my-basic-auth@file, gzip@file'
    depends_on:
      - postgres

env_file:
  # - .env
  - default.env

networks:
  # netv6:
  #   #external:
  #   name: netv6
  default:
    #external:
    name: netv4
