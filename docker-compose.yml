version: '3.6'

services:

  redis:
    container_name: bbacc_redis
    image: "redis:alpine"
    restart: always
    volumes:
      - ./redis.conf:/redis.conf
      - ${PATH_ROOT}/redis-data:/data
      - ${PATH_ROOT}/log:/var/log
      - ${PATH_ROOT}/common:/common
    command: "redis-server /redis.conf"
    user: 1000:1000
    networks:
      default:
        ipv4_address: ${IP_REDIS}
    # env_file:
    #   - ./default.env

  api_dev:
    container_name: bbacc_api_dev
    image: node:16
    working_dir: /app/backend
    restart: always
    user: "node"
    networks:
      default:
        ipv4_address: ${IP_API_DEV}
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - REDIS_URI=redis:6379:1
      - REDIS_DB=1
      - PORT=46956
      - PORTSSL=46957
      - LOGFILE=/var/log/bbacc_api_dev
      - SESSION_SECRET=${SESSION_SECRET}
      - DB_PASSWORD_MAIN=${DB_PASSWORD_MAIN}
    volumes:
      - .:/app
      - ${PATH_ROOT}/log:/var/log
      - ${PATH_ROOT}/common:/common
    # ports:
    #     - "46956:46956"
    #     - "46957:46957"
    #     - 34523:34523
    #
    # stdin_open: true
    # tty: true
    # command: "bash"
    # command: "yarn"
    command: "yarn dev"
    # command: "yarn start_dev  --inspect=34523"
    #
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.bbacc_api_dev.rule=Host(`${DOMAIN_DEV}`)&& PathPrefix(`/api`)'
      - "traefik.http.routers.bbacc_api_dev.entrypoints=websecure"
      - "traefik.http.routers.bbacc_api_dev.priority=1000"
      - "traefik.http.routers.bbacc_api_dev.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bbacc_api_dev.service=bbacc_api_dev"
      - 'traefik.http.routers.bbacc_api_dev.middlewares=gzip@file'
      - "traefik.http.services.bbacc_api_dev.loadbalancer.server.port=46956"
    depends_on:
      - redis
      - postgres

  front_dev:
    container_name: bbacc_front_dev
    image: node:16
    restart: unless-stopped
    user: "node"
    working_dir: /app/frontend
    networks:
      default:
        ipv4_address: ${IP_FRONT_DEV}
    # env_file:
    #   - ./default.env
    environment:
      - PORT=13000
      - HOST=0.0.0.0
      - NODE_ENV=development
    volumes:
      - ./:/app
      - ${PATH_ROOT}/log:/var/log
      - ${PATH_ROOT}/common:/common
    #stdin_open: true
    #tty: true
    #command: "bash"
    # command: "yarn"
    command: "yarn start"
    # command: "yarn dev"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.bbacc_front_dev.rule=Host(`${DOMAIN_DEV}`)  '
      - "traefik.http.routers.bbacc_front_dev.entrypoints=websecure"
      - "traefik.http.routers.bbacc_front_dev.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bbacc_front_dev.service=bbacc_front_dev"
      - 'traefik.http.routers.bbacc_front_dev.middlewares=gzip@file'
      - "traefik.http.services.bbacc_front_dev.loadbalancer.server.port=13000"
    depends_on:
      - api_dev

  postgres:
    container_name: bbacc_postgres
    image: postgres
    restart: always
    # env_file:
    #   - ./default.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD_MAIN}
      PGDATA: /data/postgres
    volumes:
      - ${PATH_ROOT}/postgres-data/:/data/postgres 
      - ${PATH_ROOT}/backup/:/backup
      - ${PATH_ROOT}/common:/common
    # ports:
    #   - "15432:5432"
    networks:
      default:
        ipv4_address: ${IP_POSTGRES}

  pgadmin:
    container_name: bbacc_pgadmin
    image: dpage/pgadmin4:7.7
    restart: unless-stopped
    # env_file:
    #   - ./default.env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD_MAIN}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ${PATH_ROOT}/backup/pgadmin:/var/lib/pgadmin
      - ${PATH_ROOT}/backup/:/backup
      - ${PATH_ROOT}/common:/common
    networks:
      default:
        ipv4_address: ${IP_PGADMIN}
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.bbacc_pgadmin.rule=HostRegexp(`${DOMAIN_PGADMIN}`)'
      - "traefik.http.routers.bbacc_pgadmin.entrypoints=websecure"
      - "traefik.http.routers.bbacc_pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bbacc_pgadmin.service=bbacc_pgadmin"
      - 'traefik.http.routers.bbacc_pgadmin.middlewares=my-basic-auth@file, gzip@file'
      - "traefik.http.services.bbacc_pgadmin.loadbalancer.server.port=80"
    depends_on:
      - postgres

networks:
  # netv6:
  #   #external:
  #   name: netv6
  default:
    #external:
    name: netv4
